version: "3.7"
services:
  nodered:
    image: nodered/node-red:latest
    restart: unless-stopped
    networks:
      - system_default
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=system_default"
        - "traefik.http.services.nodered.loadbalancer.server.port=1880"
        - "traefik.http.routers.nodered.rule=Host(`nodered.apps.hskrk.pl`)"
        - "traefik.http.routers.nodered.middlewares=authentik@docker"
        - "traefik.http.routers.nodered.tls=true"
        - "traefik.http.routers.nodered.tls.certresolver=myresolver"
    volumes:
      - nodered_data:/data

  render-images:
    image: amazon/aws-cli:latest
    restart: unless-stopped
    networks:
      - minio
    deploy:
      mode: replicated
      replicas: 0
      labels:
        - "swarm.cronjob.enable=true"
        - "swarm.cronjob.schedule=*/5 * * * *"
        - "swarm.cronjob.skip-running=true"
      restart_policy:
        condition: none
    environment:
      - IMAGES_BUCKET=at-statics
      - S3_ENDPOINT=http://minio:9000
    secrets:
      - source: image_render_s3_credentials
        target: /root/.aws/credentials
      - zoneminder_password
      - zoneminder_login
    volumes:
      - ./save-images-script.sh:/opt/save-images-script.sh
    entrypoint:
      - /bin/bash
    command:
      - /opt/save-images-script.sh

  frigate:
    restart: unless-stopped
    networks:
      - system_default
    image: ghcr.io/blakeblackshear/frigate:stable
    shm_size: "512mb" # update for your cameras based on calculation above
    devices:
      - /dev/dri:/dev/dri
    environment:
      - FRIGATE_ELAB_RTSP=${FRIGATE_ELAB_RTSP}
      - FRIGATE_SOFTROOM_RTSP=${FRIGATE_SOFTROOM_RTSP}
      - FRIGATE_HARDROOM_NA_DRZWI_RTSP=${FRIGATE_HARDROOM_NA_DRZWI_RTSP}
      - FRIGATE_HARDROOM_OD_DRZWI_RTSP=${FRIGATE_HARDROOM_OD_DRZWI_RTSP}
      - FRIGATE_KORYTARZ_RTSP=${FRIGATE_KORYTARZ_RTSP}
      - FRIGATE_KORYTARZ_WYJSCIE_RTSP=${FRIGATE_KORYTARZ_WYJSCIE_RTSP}
      - FRIGATE_MAGAZYNEK2_RTSP=${FRIGATE_MAGAZYNEK2_RTSP}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./frigate_config.yml:/config/config.yml:ro
      - frigate_recordings:/media/frigate
      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    deploy:
      labels:
        - "traefik.http.services.frigate.loadbalancer.server.port=5000"
        - "traefik.http.routers.frigate.rule=Host(`frigate.apps.hskrk.pl`)"
        - "traefik.enable=true"
        - "traefik.http.routers.frigate.middlewares=authentik@docker"
        - "traefik.http.routers.frigate.tls=true"
        - "traefik.http.routers.frigate.tls.certresolver=myresolver"

  mqtt:
    image: eclipse-mosquitto
    restart: always
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf

volumes:
  nodered_data:
  frigate_recordings:

networks:
  system_default:
    external: true
  minio:
    external: true
    name: minio

secrets:
  image_render_s3_credentials:
    external: true
  zoneminder_password:
    external: true
  zoneminder_login:
    external: true
