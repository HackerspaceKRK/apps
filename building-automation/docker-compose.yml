version: "3.7"
services:
  nodered:
    image: nodered/node-red:latest
    restart: unless-stopped
    networks:
      - system_default
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=system_default"
        - "traefik.http.services.nodered.loadbalancer.server.port=1880"
        - "traefik.http.routers.nodered.rule=Host(`nodered.apps.hskrk.pl`)"
        - "traefik.http.routers.nodered.middlewares=authentik@docker"
        - "traefik.http.routers.nodered.tls=true"
        - "traefik.http.routers.nodered.tls.certresolver=myresolver"
    volumes:
      - nodered_data:/data

  render-images:
    image: amazon/aws-cli:latest
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 0
      labels:
        - "swarm.cronjob.enable=true"
        - "swarm.cronjob.schedule=*/5 * * * *"
        - "swarm.cronjob.skip-running=true"
      restart_policy:
        condition: none
    environment:
      - IMAGES_BUCKET=hskrk-images
      - S3_ENDPOINT=https://s3.us-east-005.backblazeb2.com
    secrets:
      - source: image_render_s3_credentials
        target: /root/.aws/credentials
      - zoneminder_password
      - zoneminder_login
    volumes:
      - ./save-images-script.sh:/opt/save-images-script.sh
    entrypoint:
      - /bin/bash
    command:
      - /opt/save-images-script.sh

volumes:
  nodered_data:

networks:
  system_default:
    external: true

secrets:
  image_render_s3_credentials:
    external: true
  zoneminder_password:
    external: true
  zoneminder_login:
    external: true
